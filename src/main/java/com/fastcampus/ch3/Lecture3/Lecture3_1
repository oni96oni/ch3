Spring DI 흉내내기
    1.변경에 유리한 코드(1) - 다형성, factory method

    예시)
    SportsCar car = new SportsCar(); 를 아래 코드로 변경을할때 수정해야하는 포인트는 2군데 SportsCar -> Truck
    Truck car = new Truck();

    Car car = new SportsCar(); 이런식으로 하면 포인트는 1군데 SportsCar -> Truck
    Car car = new Truck();

    다형성을 이용하여 변경포인트를 2개에서 1개로 줄일 수 있다.

    더 변경포인트를 줄이기 위해서는 별도의 메서드를 만드는것!

    Car car = getCar(); 8~9코드와 이코드들이 동일!
    static Car getCar() {
        return new SportsCar();
    }

    2.변경에 유리한 코드(2) - Map과 외부 파일
        굳이 Map 대신 Properties를 쓰는 이유 load()가 파일에서 데이터를 읽고, 저장하는것이 편해서!
        프로그램을 변경하지 않아도된다! (코드를) txt파일만 수정하면된다.
        ★프로그램의 변경을 최소화하여야한다!

        ★변경에 유리한 코드의 핵심 '분리'에는
            1. 변하는것, 변하지 않는것
            2. 관심사의 분리
            3. 중복코드 -> AOP

        하드코딩 되어있는 부분은 유연하게!